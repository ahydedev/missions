# Generated by Django 4.1.2 on 2023-01-09 12:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_manager', models.BooleanField(default=False)),
                ('new_notifications', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=5000)),
                ('sent', models.DateField(auto_now_add=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('games', models.CharField(choices=[('Olympic Games', 'Olympic Games'), ('Paralympic Games', 'Paralympic Games')], max_length=30, null=True)),
                ('category', models.CharField(choices=[('Quality Experience', 'Quality Experience'), ('Sporting Performance', 'Sporting Performance'), ('Organisation', 'Organisation')], max_length=30)),
                ('description', models.TextField(max_length=1000)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('duration', models.CharField(max_length=30, null=True)),
                ('num_positions', models.IntegerField(default=0)),
                ('num_applications', models.IntegerField(default=0)),
                ('num_open_positions', models.IntegerField(default=0)),
                ('num_filled_positions', models.IntegerField(default=0)),
                ('interview_required', models.BooleanField(default=False)),
                ('applications_deadline', models.DateField()),
                ('is_live', models.BooleanField(default=True)),
                ('languages', models.ManyToManyField(related_name='missions_requiring_language', to='missions.language')),
                ('locations', models.ManyToManyField(related_name='missions_at_location', to='missions.location')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_missions', to=settings.AUTH_USER_MODEL)),
                ('skills', models.ManyToManyField(related_name='missions_requiring_skill', to='missions.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('city_of_residence', models.CharField(max_length=100)),
                ('country_of_residence', models.CharField(max_length=100)),
                ('nationality', models.CharField(max_length=100)),
                ('interests', models.ManyToManyField(null=True, related_name='volunteers_with_interest', to='missions.interest')),
                ('languages', models.ManyToManyField(null=True, related_name='language_speakers', to='missions.language')),
                ('skills', models.ManyToManyField(null=True, related_name='volunteers_with_skill', to='missions.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('city_of_residence', models.CharField(max_length=100)),
                ('country_of_residence', models.CharField(max_length=100)),
                ('nationality', models.CharField(max_length=100)),
                ('application_statement', models.TextField(max_length=5000)),
                ('locations', models.TextField(max_length=2000, null=True)),
                ('skills', models.TextField(max_length=2000)),
                ('interests', models.TextField(max_length=2000)),
                ('languages', models.TextField(max_length=2000)),
                ('availability', models.CharField(max_length=10)),
                ('skills_match', models.CharField(max_length=10)),
                ('languages_match', models.CharField(max_length=10)),
                ('availability_match', models.CharField(max_length=10)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_unsuccessful', models.BooleanField(default=False)),
                ('mission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications_for_mission', to='missions.mission')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_applications', to='missions.volunteer')),
            ],
        ),
    ]
